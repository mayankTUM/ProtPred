import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Set;

import org.jgrapht.DirectedGraph;
import org.jgrapht.Graphs;
import org.jgrapht.graph.DefaultEdge;
import org.jgrapht.graph.SimpleDirectedGraph;
//import org.jgrapht.*;


public class Main {

	/**
	 * @param args
	 */
	static HashMap<String, Integer> keyMap = new HashMap<String, Integer>();
	public static void main(String[] args) throws Exception
	{
		// TODO Auto-generated method stub

		// parsing the file.txt
		List<String> ProteinList = new ArrayList<String>();
		Parser parser = new Parser( );
		ProteinList = parser.ParseSeqFile(args[0], args[1]);

		HPOParser hpoParse = new HPOParser();

		Iterator<String> it = ProteinList.iterator();

		String Prot;
		System.out.println();

		// Graph Data structures
		DirectedGraph<String, DefaultEdge > Graph1;			
		Graph1 = new SimpleDirectedGraph<String, DefaultEdge>(DefaultEdge.class);

		Prot = it.next();
		Graph1 = hpoParse.parseHPO( Prot );
		iteratorMethod(Graph1);

		while( it.hasNext() )
		{
			Prot = it.next();
			Graphs.addGraph(Graph1, hpoParse.parseHPO( Prot ) );
			iteratorMethod(Graph1);
		}

		System.out.println("Merged Graph");
		System.out.println(Graph1.toString());
	}
	public static void iteratorMethod(DirectedGraph<String, DefaultEdge > Graph1)
	{
		Set<String> set = Graph1.vertexSet();
		
	}
}
